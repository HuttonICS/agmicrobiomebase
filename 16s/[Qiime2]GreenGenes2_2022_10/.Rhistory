library(qiime2R)
# Convert qiime2 results to phyloseq format
physeq <- qza_to_phyloseq(
features = "16s/GreenGenes_13_8/428_228_220_table_gg-13-8-with-phyla-no-mitochondria-no-chloroplast.qza", # table.qza
# tree = "inst/artifacts/2020.2_moving-pictures/rooted-tree.qza",
taxonomy = "16s/GreenGenes_13_8/428_228_220_taxonomy_gg-13-8.qza",
metadata = "16s/meta-table_temp.txt"
)
# Convert qiime2 results to phyloseq format
physeq <- qza_to_phyloseq(
features = "/16s/GreenGenes_13_8/428_228_220_table_gg-13-8-with-phyla-no-mitochondria-no-chloroplast.qza", # table.qza
# tree = "inst/artifacts/2020.2_moving-pictures/rooted-tree.qza",
taxonomy = "/16s/GreenGenes_13_8/428_228_220_taxonomy_gg-13-8.qza",
metadata = "/16s/meta-table_temp.txt"
)
# Convert qiime2 results to phyloseq format
physeq <- qza_to_phyloseq(
features = "./16s/GreenGenes_13_8/428_228_220_table_gg-13-8-with-phyla-no-mitochondria-no-chloroplast.qza", # table.qza
# tree = "inst/artifacts/2020.2_moving-pictures/rooted-tree.qza",
taxonomy = "./16s/GreenGenes_13_8/428_228_220_taxonomy_gg-13-8.qza",
metadata = "./16s/meta-table_temp.txt"
)
# Convert qiime2 results to phyloseq format
physeq <- qza_to_phyloseq(
features = "16s\GreenGenes_13_8\428_228_220_table_gg-13-8-with-phyla-no-mitochondria-no-chloroplast.qza", # table.qza
list.files()
setwd("~/GitHub/agmicrobiomebase")
# Convert qiime2 results to phyloseq format
physeq <- qza_to_phyloseq(
features = "./16s/GreenGenes_13_8/428_228_220_table_gg-13-8-with-phyla-no-mitochondria-no-chloroplast.qza", # table.qza
# tree = "inst/artifacts/2020.2_moving-pictures/rooted-tree.qza",
taxonomy = "./16s/GreenGenes_13_8/428_228_220_taxonomy_gg-13-8.qza",
metadata = "./16s/meta-table_temp.txt"
)
## Subset the data
sample.remove <- c("SU.SC.SH.4", "SU.CY.YO.5",
"BE.SC.SH.5", "BE.SL.AN.3",
"OA.SL.SH.4","OA.SL.BE.2",
"OR.SL.SH.1", "OR.SL.SH.2",
"WH.SC.SH.4",
"BA.SL.BE.3.RE", "CO.CL.YO.5.RE", "OA.SL.AN.4.RE",
"CO.CY.YO.5.RE2", #
"p.ve.1", "p.ve.2","p.ve.3", "p.ve.4", "p.ve.5",
"n.ve.ext.1", "n.ve.ext.2", "n.ve.ITS.1",
"n.ve.1","n.ve.2","n.ve.3","n.ve.4", "n.ve.5")
physeq.a <- subset_samples(physeq,  !(id %in% sample.remove))
library("phyloseq")
## Subset the data
sample.remove <- c("SU.SC.SH.4", "SU.CY.YO.5",
"BE.SC.SH.5", "BE.SL.AN.3",
"OA.SL.SH.4","OA.SL.BE.2",
"OR.SL.SH.1", "OR.SL.SH.2",
"WH.SC.SH.4",
"BA.SL.BE.3.RE", "CO.CL.YO.5.RE", "OA.SL.AN.4.RE",
"CO.CY.YO.5.RE2", #
"p.ve.1", "p.ve.2","p.ve.3", "p.ve.4", "p.ve.5",
"n.ve.ext.1", "n.ve.ext.2", "n.ve.ITS.1",
"n.ve.1","n.ve.2","n.ve.3","n.ve.4", "n.ve.5")
physeq.a <- subset_samples(physeq,  !(id %in% sample.remove))
########################## in Crop types #########
AyBCode <- merge_samples(physeq.a, "Group", fun = sum)
physeq = AyBCode
gentab_levels <- list()
observationThreshold <- 1
for (level in c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")) {
genfac <- factor(tax_table(physeq)[, level])
gentab <- apply(otu_table(physeq), MARGIN = 1, function(x) {
tapply(x, INDEX = genfac, FUN = sum, na.rm = TRUE, simplify = TRUE)
})
level_counts <- apply(gentab > observationThreshold, 2, sum)
BB <- as.data.frame(level_counts)
BB$name <- row.names(BB)
# Add the result to the gentab_levels list
gentab_levels[[level]] <- BB
}
require(tidyverse);
B <- reduce(gentab_levels, full_join, by = "name");
# Write the data frame to a file
write.csv(B, file = "level_counts_by_group.csv", row.names = FALSE)
# Create a factor corresponding to the Species
genfac = factor(tax_table(physeq)[, "Species"])
# Tabulate the counts for each Species in each sample
gentab = apply(otu_table(physeq), MARGIN = 2, function(x) {
tapply(x, INDEX = genfac, FUN = sum, na.rm = TRUE, simplify = TRUE)
})
setwd("~/GitHub/agmicrobiomebase/16s/[Qiime2]GreenGenes2_2022_10")

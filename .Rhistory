# Create a ggtree plot
p <- ggtree(GP.chl, ladderize = FALSE) +
geom_text2(aes(subset = !isTip, label = label), hjust = -0.3, size = 3.5) +
geom_tiplab(aes(label = Species), as_ylab=TRUE) +
geom_point(aes(x = x + hjust, color = Group,
shape = Group, size = Abundance), na.rm = TRUE) +
scale_size_continuous(trans = log_trans(2)) +
scale_shape_manual(values = c(15, 17, 3, 4, 16, 18, 21, 22, 23)) + # Set custom
# theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
# axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 2.5),
axis.title.y = element_text(color="black", size=2.5,face="bold"), legend.position = "top")
# Print the ggtree plot
print(p)
# Load the GlobalPatterns dataset and prune taxa
GP <- prune_taxa(taxa_sums(physeq.a) > 0, physeq.a)  # Remove taxa with zero sums
GP.chl <- subset_taxa(GP, Genus == "Fusarium")   # Subset data based on Phylum value
# Create a ggtree plot
p <- ggtree(GP.chl, ladderize = FALSE) +
geom_text2(aes(subset = !isTip, label = label), hjust = -0.3, size = 3.5) +
geom_tiplab(aes(label = Species), as_ylab=TRUE) +
geom_point(aes(x = x + hjust, color = Group,
shape = Group, size = Abundance), na.rm = TRUE) +
scale_size_continuous(trans = log_trans(2)) +
scale_shape_manual(values = c(15, 17, 3, 4, 16, 18, 21, 22, 23)) + # Set custom
# theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 2.5),
axis.title.y = element_text(color="black", size=2.5,face="bold"),
legend.position = "top"
)
# Print the ggtree plot
print(p)
# Load the GlobalPatterns dataset and prune taxa
GP <- prune_taxa(taxa_sums(physeq.a) > 0, physeq.a)  # Remove taxa with zero sums
GP.chl <- subset_taxa(GP, Genus == "Fusarium")   # Subset data based on Phylum value
# Create a ggtree plot
p <- ggtree(GP.chl, ladderize = FALSE) +
geom_text2(aes(subset = !isTip, label = label), hjust = -0.3, size = 3.5) +
geom_tiplab(aes(label = Species), as_ylab=TRUE) +
geom_point(aes(x = x + hjust, color = Group,
shape = Group, size = Abundance), na.rm = TRUE) +
scale_size_continuous(trans = log_trans(2)) +
scale_shape_manual(values = c(15, 17, 3, 4, 16, 18, 21, 22, 23)) + # Set custom
# theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25) #,
# axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
# axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 2.5),
# axis.title.y = element_text(color="black", size=2.5,face="bold"),
# legend.position = "top"
)
# Print the ggtree plot
print(p)
# Load the GlobalPatterns dataset and prune taxa
GP <- prune_taxa(taxa_sums(physeq.a) > 0, physeq.a)  # Remove taxa with zero sums
GP.chl <- subset_taxa(GP, Genus == "Fusarium")   # Subset data based on Phylum value
# Create a ggtree plot
p <- ggtree(GP.chl, ladderize = FALSE) +
geom_text2(aes(subset = !isTip, label = label), hjust = -0.3, size = 3.5) +
geom_tiplab(aes(label = Species), as_ylab=TRUE) +
geom_point(aes(x = x + hjust, color = Group,
shape = Group, size = Abundance), na.rm = TRUE) +
scale_size_continuous(trans = log_trans(2)) +
scale_shape_manual(values = c(15, 17, 3, 4, 16, 18, 21, 22, 23)) + # Set custom
# theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25) #,
# axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
# axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 2.5),
# axis.title.y = element_text(color="black", size=2.5,face="bold"),
legend.position = "top"
# Load the GlobalPatterns dataset and prune taxa
GP <- prune_taxa(taxa_sums(physeq.a) > 0, physeq.a)  # Remove taxa with zero sums
GP.chl <- subset_taxa(GP, Genus == "Fusarium")   # Subset data based on Phylum value
# Create a ggtree plot
p <- ggtree(GP.chl, ladderize = FALSE) +
geom_text2(aes(subset = !isTip, label = label), hjust = -0.3, size = 3.5) +
geom_tiplab(aes(label = Species), as_ylab=TRUE) +
geom_point(aes(x = x + hjust, color = Group,
shape = Group, size = Abundance), na.rm = TRUE) +
scale_size_continuous(trans = log_trans(2)) +
scale_shape_manual(values = c(15, 17, 3, 4, 16, 18, 21, 22, 23)) + # Set custom
# theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25) ,
# axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
# axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 2.5),
# axis.title.y = element_text(color="black", size=2.5,face="bold"),
legend.position = "top"
)
# Print the ggtree plot
print(p)
# Aggregate taxa at the genus level
B <- aggregate_taxa(physeq.a.group, "Genus", verbose = TRUE)
library("UpSetR")
library("reshape2")
library("plyr")
library("dplyr")
# BiocManager::install("microbiome")
library("microbiome")
library("UpSetR")
library("reshape2")
library("plyr")
library("dplyr")
BiocManager::install("microbiome")
library("microbiome")
# Aggregate taxa at the genus level
B <- aggregate_taxa(physeq.a.group, "Genus", verbose = TRUE)
# Remove undesired genera
# B2 <- subset_taxa(B, !get("Genus") %in% c("uncultured", "Unknown"))
# Remove unwanted taxon names
taxa_to_remove <- c("uncultured", "Unknown")
B2 <- subset_taxa(B, !get("Genus") %in% taxa_to_remove)
# Extract relevant data from the phyloseq object
sample_data <- sample_data(B2)
otu_table <- otu_table(B2)
abundance <- as.vector(otu_table)
# Create a tibble with the extracted data
D <- tibble(
Sample = rep(sample_data$Group, each = nrow(otu_table)),
ASV = rep(rownames(otu_table), times = ncol(otu_table)),
Abundance = abundance
) %>%
group_by(Sample) %>%
mutate(rank = rank(desc(Abundance))) %>%
filter(Abundance > 0) %>%
ungroup() %>%
select(Sample, Abundance, ASV)
# Remove the Abundance column
D$Abundance <- NULL
# Rename the second column to "ASV"
names(D)[2] <- "ASV"
# Convert data from long to wide format
E <- dcast(D, ASV ~ Sample)
# Define a binary function
binary_fun <- function(x) {
x[is.na(x)] <- 0
ifelse(x > 0, 1, 0)
}
col = brewer.pal(n = 9, name = "Paired")
# Apply the binary function to columns 2 to 10
temp_df <- apply(E[2:10], 2, binary_fun)
temp_df <- as.data.frame(temp_df)
# Create an UpSet plot (https://www.r-bloggers.com/2018/07/hacking-our-way-through-upsetr/)
# https://stackoverflow.com/questions/54770795/stacked-barplot-in-upsetr
# https://community.rstudio.com/t/how-to-get-the-common-element-names-across-the-sets-in-an-upsetr-plot/93507
# https://dethwench.com/making-upset-plots-in-r-with-upsetr/
upset_plot <- upset(temp_df,
sets = colnames(temp_df),
sets.bar.color = (col),
order.by = "freq",
empty.intersections = "on",
mainbar.y.label = "Counts by Pattern of Conditions",
sets.x.label = "Counts by Condition",
matrix.color="blue",
point.size=2
)
# Print the UpSet plot
print(upset_plot)
# Plotting for the abundance of one specific fungi
# Subset the taxa to Genus from physeq.wheat
physeq.a.genus <- subset_taxa(physeq.a, Genus == "Fusarium")
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a.genus@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.genus@otu_table)))
meta$Fusarium = rowSums(otudf)
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = Fusarium,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
# Load required libraries
library("phyloseq")   # For handling phylogenetic sequencing data
# BiocManager::install("ggtree")
library("ggtree")     # For tree visualisation
library("scales")     # For scaling transformations
# Load the GlobalPatterns dataset and prune taxa
GP <- prune_taxa(taxa_sums(physeq.a) > 0, physeq.a)  # Remove taxa with zero sums
GP.chl <- subset_taxa(GP, Genus == "Fusarium")   # Subset data based on Phylum value
# Create a ggtree plot
p <- ggtree(GP.chl, ladderize = FALSE) +
geom_text2(aes(subset = !isTip, label = label), hjust = -0.3, size = 3.5) +
geom_tiplab(aes(label = Species), as_ylab=TRUE) +
geom_point(aes(x = x + hjust, color = Group,
shape = Group, size = Abundance), na.rm = TRUE) +
scale_size_continuous(trans = log_trans(2)) +
scale_shape_manual(values = c(15, 17, 3, 4, 16, 18, 21, 22, 23)) + # Set custom
# theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25) ,
# axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
# axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 2.5),
# axis.title.y = element_text(color="black", size=2.5,face="bold"),
legend.position = "top"
)
# Print the ggtree plot
print(p)
# Plotting for the abundance of one specific fungi
# Subset the taxa to Genus from physeq.wheat
physeq.a.genus <- subset_taxa(physeq.a, Species == "Fusarium_equiseti")
# Plotting for the abundance of one specific fungi
# Subset the taxa to Genus from physeq.wheat
physeq.a.equiseti <- subset_taxa(physeq.a, Species == "Fusarium_equiseti")
physeq.a.culmorum <- subset_taxa(physeq.a, Species == "Fusarium_culmorum")
physeq.a.nurragi <- subset_taxa(physeq.a, Species == "Fusarium_nurragi")
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a.group@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.genus@otu_table)))
otudf = as.data.frame(t(as.data.frame(physeq.a.equiseti@otu_table)))
View(otudf)
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a.group@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.equiseti@otu_table)))
otudf = as.data.frame(t(as.data.frame(physeq.a.culmorum@otu_table)))
otudf = as.data.frame(t(as.data.frame(physeq.a.nurragi@otu_table)))
meta$Fusarium = rowSums(otudf)
View(meta)
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a.group@sam_data
View(metdat)
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.equiseti@otu_table)))
otudf = as.data.frame(t(as.data.frame(physeq.a.culmorum@otu_table)))
otudf = as.data.frame(t(as.data.frame(physeq.a.nurragi@otu_table)))
meta$Fusarium = rowSums(otudf)
View(meta)
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a@sam_data
meta$equiseti = rowSums(otudf)
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.equiseti@otu_table)))
meta$F.equiseti = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.culmorum@otu_table)))
meta$F.culmorum = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.nurragi@otu_table)))
meta$F.nurragi = rowSums(otudf)
View(meta)
otudf = as.data.frame(t(as.data.frame(physeq.a.culmorum@otu_table)))
View(otudf)
physeq.a.tokinense <- subset_taxa(physeq.a, Species == "Fusarium_tokinense")
physeq.a.tonkinense <- subset_taxa(physeq.a, Species == "Fusarium_tonkinense")
meta$F.tonkinense = rowSums(otudf)
View(meta)
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.culmorum,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
View(meta)
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.equiseti,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.nurragi,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
par(mfrow=c(3,1))
physeq.a.genus <- subset_taxa(physeq.a, Genus == "Fusarium")
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a.genus@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.genus@otu_table)))
meta$Fusarium = rowSums(otudf)
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = Fusarium,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
# Plotting for the abundance of one specific fungi
# Subset the taxa to Genus from physeq.wheat
physeq.a.genus <- subset_taxa(physeq.a, Genus == "Fusarium")
# Plotting for the abundance of one specific fungi
# Subset the taxa to Genus from physeq.wheat
physeq.a.genus <- subset_taxa(physeq.a, Genus == "Fusarium")
physeq.a.equiseti <- subset_taxa(physeq.a, Species == "Fusarium_equiseti")
physeq.a.culmorum <- subset_taxa(physeq.a, Species == "Fusarium_culmorum")
physeq.a.nurragi <- subset_taxa(physeq.a, Species == "Fusarium_nurragi")
physeq.a.tonkinense <- subset_taxa(physeq.a, Species == "Fusarium_tonkinense")
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.genus@otu_table)))
meta$Fusarium = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.equiseti@otu_table)))
otudf = as.data.frame(t(as.data.frame(physeq.a.culmorum@otu_table)))
meta$F.culmorum = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.nurragi@otu_table)))
meta$F.nurragi = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.tonkinense@otu_table)))
meta$F.tonkinense = rowSums(otudf)
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
par(mfrow=c(3,1))
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = Fusarium,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.equiseti,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"),
legend.position = "none")
# Plotting for the abundance of one specific fungi
# Subset the taxa to Genus from physeq.wheat
physeq.a.genus <- subset_taxa(physeq.a, Genus == "Fusarium")
physeq.a.equiseti <- subset_taxa(physeq.a, Species == "Fusarium_equiseti")
physeq.a.culmorum <- subset_taxa(physeq.a, Species == "Fusarium_culmorum")
physeq.a.nurragi <- subset_taxa(physeq.a, Species == "Fusarium_nurragi")
physeq.a.tonkinense <- subset_taxa(physeq.a, Species == "Fusarium_tonkinense")
# Calculate the total abundance of Fusarium for each sample
meta = physeq.a@sam_data
otudf = as.data.frame(t(as.data.frame(physeq.a.genus@otu_table)))
meta$Fusarium = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.equiseti@otu_table)))
meta$F.equiseti = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.culmorum@otu_table)))
meta$F.culmorum = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.nurragi@otu_table)))
meta$F.nurragi = rowSums(otudf)
otudf = as.data.frame(t(as.data.frame(physeq.a.tonkinense@otu_table)))
meta$F.tonkinense = rowSums(otudf)
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
par(mfrow=c(3,1))
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = Fusarium,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.equiseti,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"),
legend.position = "none")
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.nurragi,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"),
legend.position = "none")
par(mfrow=c(3,1))
# Plot a graph of the abundance of Fusarium for each sample grouped by Group:
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = Fusarium,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"), legend.position = "none")
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.equiseti,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"),
legend.position = "none")
ggplot(subset(meta, Group %in% c("WH.CL.BO","WH.CL.YO",
"WH.CY.BU","WH.CY.YO",
"WH.SC.HE","WH.SC.SH",
"WH.SL.AN","WH.SL.BE",
"WH.SL.SH")),
aes(x = Group, y = F.nurragi,  colour = interaction(Group))) +
geom_point(alpha = 1, position = "jitter", size = 4) +
geom_boxplot(alpha = 0, colour = "black", size = 0.8)+
theme_classic() +
theme(text = element_text(size=15, colour = "black"),
axis.ticks = element_line(colour = "black", size = 1.25),
axis.line = element_line(colour = 'black', size = 1.25),
axis.text.x = element_text(angle=45, hjust=1, colour = "black", size = 13),
axis.text.y = element_text(angle=0, hjust=0.5, colour = "black",size = 13),
axis.title.y = element_text(color="black", size=15,face="bold"),
legend.position = "none")
install.packages("tinytex")
